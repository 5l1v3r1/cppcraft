#version 130

uniform vec4 lightVector;
uniform mat4 rotationMatrix;

uniform vec4 playerLight;
uniform float modulation;
uniform vec4 colordata;

out vec3 texCoord;
out float worldLight;
out float brightness;

const float VERTEX_SCALE

void main() {

	texCoord = gl_MultiTexCoord0.xyz;
	texCoord.st /= VERTEX_SCALE;
	
	vec4 position = vec4(gl_Vertex.xyz / VERTEX_SCALE, 1.0);
	
	vec3 normal = mat3(rotationMatrix) * gl_Normal;
	
	const float ambience = 0.6;
	float dotlight = 0.2 + 0.2 * dot(normal, lightVector.xyz);
	
	worldLight = ambience + dotlight;
	
	brightness = min(1.0, playerLight[2] * modulation);
	brightness = max(brightness, length(colordata.rgb) * 0.58);
	
	gl_Position = gl_ModelViewProjectionMatrix * position;
	
}
